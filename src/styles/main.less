// main.less

// importação de variáveis e mapas
@import "mapas.less";
@import "variaveis.less";

// escaping
@mobileBreakpoint: ~"(max-width: 767px)"; 
@tabletDesktopBreakpoint: ~"(max-width: 1023px)"; 

// criando o mixin
.gridStyle {
    margin-top: 40px;
    display: grid;
    grid-template-columns: repeat(3, 32.66%);
    column-gap: 1%;
    row-gap: 4%;
    width: 100%;
}

.buttonStyle {
    display: block;
    background-color: #colors[buttonBgColor];
    color: #colors[textColor];
    text-align: center;
    padding: 8px 0;
    border-radius: 8px;
    margin-top: 8px;
    text-decoration: none;
}

// reset layout
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: @fontePrincipal;
}

body {
    background-color: #colors[backgroundColor];
}

li {
    list-style: none;
}

.container {
    max-width: 1024px;
    width: 100%;
    margin: 0 auto;

        // @media and (max-width: 1023px)
        @media @tabletDesktopBreakpoint { 
            max-width: 80%;
        }
    
}

header {
    background-color: #colors[headerBgColor];
    position: sticky;
    top: 0;
    left: 0;
    
    .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 16px 0;
    }
}


.menu {
    display: flex;

    li {
        font-weight: bold;
        margin-left: 24px;

        a {
            color: #colors[textColor];
            text-decoration: none;
        }
    }
}


section {
    padding: 56px 0;
}

.products {
    .gridStyle(); // usando o mixin

    // @media and (max-width: 1023px)
    @media @tabletDesktopBreakpoint { 
        grid-template-columns: repeat(2, 48.5%);
        column-gap: 3%;
    }

    // @media (max-width: 767px)
    @media @mobileBreakpoint{ 
        display: block;
    }

    &-item {
        
        // @media (max-width: 767px)
        @media @mobileBreakpoint { 
            margin-bottom: 32px;
        }

        img {
            width: 100%;
            border-radius: 16px;
        }
    }

    &-button {
        .buttonStyle(); // usando o mixin

        &:hover {
            background-color: #colors[buttonHvBgColor];
        }
    }
}
